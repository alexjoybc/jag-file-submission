openapi: 3.0.0
info:
  version: 0.3.0
  title: jag-efiling-api
  description: Efiling api
servers:
- url: 'http://localhost:8080'
tags:
- name: submission
  description: Submission Api
paths:
  '/submission/generateUrl':
    post:
      summary: Generates a secure URL for e-filing submission
      operationId: GenerateUrl
      tags:
      - submission
      requestBody:
        description: requested parameters to generate a url
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUrlRequest'
      responses:
        '200':
          description: File successfully received
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateUrlResponse'
        '403':
          description: Request does not meet the required criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EfilingError'
  '/submission/{id}':
    get:
      summary: Get user detail for a given submission
      operationId: GetSubmissionUserDetail
      tags:
      - submission
      parameters:
      - name: id
        in: path
        description: A submission id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Config found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSubmissionResponse'
        '404':
          description: Config not found
components:
  schemas:
    Account:
      type: object
      description: represents a user account
      properties:
        type:
          type: string
          enum: [BCEID, CSO]
          description: the account type
        identifier:
          type: string
          description: the account identifier
    DocumentProperties:
      type: object
      description: Submission Metadata used to describe the submission that will be e-filled
      required:
      - type
      - subType
      - documentAccess
      properties:
        type:
          type: string
          description: the submission type
        subType:
          type: string
          description: the submission sub type
        submissionAccess:
          $ref: '#/components/schemas/EndpointAccess'
    EfilingError:
      required:
      - error
      - message
      properties:
        error:
          type: string
        message:
          type: string
    EndpointAccess:
      type: object
      description: Represent an http endpoint
      properties:
        url:
          type: string
        verb:
          type: string
          enum: [GET, POST]
        headers:
          type: object
          additionalProperties:
            type: string
    GenerateUrlRequest:
      description: details about the required transaction
      required:
      - userId
      - navigation
      - documentProperties
      properties:
        userId:
          type: string
          description: a unique identifier for the user
        documentProperties:
          $ref: '#/components/schemas/DocumentProperties'
        navigation:
          $ref: '#/components/schemas/Navigation'
    GenerateUrlResponse:
      description: A temporary url for uploading submission
      properties:
        expiryDate:
          type: integer
          format: int64
        efilingUrl:
          type: string
    GetSubmissionResponse:
      type: object
      required:
      - userDetails
      - navigation
      properties:
        userDetails:
          $ref: '#/components/schemas/UserDetails'
        navigation:
          $ref: '#/components/schemas/Navigation'
    Navigation:
      required:
      - success
      - error
      - cancel
      properties:
        success:
          $ref: '#/components/schemas/Redirect'
        error:
          $ref: '#/components/schemas/Redirect'
        cancel:
          $ref: '#/components/schemas/Redirect'
    Redirect:
      required:
      - url
      properties:
        url:
          type: string
    UserDetails:
      description: represents a user submitting a package
      type: object
      required:
      - firstName
      - lastName
      - middleName
      - email
      properties:
        firstName:
          type: string
          description: the user first name
        lastName:
          type: string
          description: the user last name
        middleName:
          type: string
          description: the user middle name
        email:
          type: string
          description: the user email address
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
